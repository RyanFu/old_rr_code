<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>renren_sns_explore_xoa</display-name>

	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60</param-value>
	</context-param>

	<filter>
		<filter-name>CompressingFilter</filter-name>
		<filter-class>com.planetj.servlet.filter.compression.CompressingFilter</filter-class>
		<init-param>
			<param-name>includeContentTypes</param-name>
			<param-value>text/html,text/xml,text/plain,application/json</param-value>
		</init-param>
		<init-param>
			<param-name>compressionThreshold</param-name>
			<param-value>2048</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CompressingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>roseFilter</filter-name>
		<filter-class>net.paoding.rose.RoseFilter</filter-class>
		<init-param>
			<param-name>load</param-name>
			<param-value>com.renren.sns.explore.xoa.controllers</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>roseFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

	<!-- - 这个参数告诉Log4jConfigListener Log4J的属性文件位置。 - Qieqie:我建议我们把log4j的配置文件就按照这样的地址存放，如无必要就保持这种惯例即可。 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.xml</param-value>
	</context-param>
	<!-- - 这个就是Log4jConfigListener配置，它可以读取上面配置的log4jConfigLocation等信息， - 配置Log4J信息以及进行webapp根地址的暴露(暴露使其成为一个System属性，参见上面的 - log4jExposeWebAppRoot配置) -->
	<!-- - !!如果您使用JBoss作为应用服务器，请把这个配置注释掉，使它不生效，JBoss已经提供了全局的Log4J配置了。 - 其它情况，您可以打开以下注释(Rose默认为注释掉的)，使它生效。 -->
	<!-- -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>com.xiaonei.platform.core.opt.base.action.InitiateListener</listener-class>
	</listener>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>